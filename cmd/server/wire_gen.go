// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/dreaminglwj/sage/internal/conf"
	"github.com/dreaminglwj/sage/internal/plugin/log"
	"github.com/dreaminglwj/sage/internal/server"
	"github.com/dreaminglwj/sage/internal/service"
	"github.com/dreaminglwj/sage/internal/storage"
	"github.com/dreaminglwj/sage/internal/storage/repository"
	"github.com/go-kratos/kratos/v2"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(config *conf.Config) (*kratos.App, error) {
	logger, err := log.NewLogger(config)
	if err != nil {
		return nil, err
	}
	engine, err := storage.NewEngine(config, logger)
	if err != nil {
		return nil, err
	}
	helper := log.NewHelper(logger)
	storageStorage := storage.NewStorage(engine, helper)
	schemaRepository := repository.NewSchemaRepository()
	schemaService := service.NewSchemaService(config, storageStorage, helper, schemaRepository)
	grpcServer := server.NewGRPCServer(config, logger, schemaService)
	app := newApp(config, logger, grpcServer)
	return app, nil
}
